% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hete_x.R
\name{hete_x}
\alias{hete_x}
\alias{hete_x.default}
\alias{hete_x.formula}
\title{X-Learner Meta-Estimator}
\usage{
hete_x(x, ...)

\method{hete_x}{default}(x, y, tmt, est, tmt_est = est, ctl_est = est,
  te_tmt_est = est, te_ctl_est = est, ...)

\method{hete_x}{formula}(x, data, est, tmt_est = est, ctl_est = est,
  te_tmt_est = est, te_ctl_est = est, ...)
}
\arguments{
\item{x}{a \code{data.frame} or matrix with predictor variables measured prior to
treatment or unaffected by treatment. Alternatively, this can be a model
formula: \code{outcome ~ x1 + x2 | treatment}}

\item{...}{ignored.}

\item{y}{a vector of outcomes.}

\item{tmt}{a vector indicating which units received treatment.}

\item{est, tmt_est, ctl_est, te_tmt_est, te_ctl_est}{an estimator to use for
modeling the treatment effect. This must be a function which takes two
arguments, \code{x} and \code{y} and returns an object which has an
implementation of \code{\link[stats]{predict}}. The \code{predict}
implementation must return a single vector with the estimated outcome or
probability of success in the case of binary outcomes. By default the same
estimator, \code{est} is used for all four models in the meta-estimator.
You may optionally select a different estimator for one or more of these
models. \code{tmt_est} and \code{ctl_est} are used to estimate the response
in the treatment and control groups respectively. \code{te_tmt_est} and
\code{te_ctl_est} are used to estimate the treatment effect in the
treatment and control groups.}

\item{data}{a \code{data.frame} containing the variables specified in
\code{x} when using a formula to specify the model.}
}
\value{
A \code{hete_x} object.
}
\description{
X-Learner Meta-Estimator
}
\examples{
\dontrun{
library(tidyverse)
data(gotv)

df <- gotv \%>\%
  filter(treatment \%in\% c("Control", "Neighbors")) \%>\%
  mutate(treatment = ifelse(treatment == "Control", 0, 1))

m <- hete_x(voted ~ . | treatment, data = df, est = random_forest)
p <- predict(m, df)

uc <- uplift(df$voted, df$treatment, p)
plot(uc)

}
}
\references{
KÃ¼nzel, S., Sekhon, J., Bickel, P., & Yu, B. (2017). Meta-learners for Estimating Heterogeneous Treatment Effects using Machine Learning. arXiv preprint arXiv:1706.03461.
}
